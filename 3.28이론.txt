클래스 타입변환

자동형변환
자식 => 부모
ㄴ 자식타입에 정의되어있던 필드나 메서드를 사용할 수 없다.
ㄴ 단, 오버라이딩된 메서드는 사용할 수 있다.

강제형변환
부모 -> 자식
ㄴ(자식클래스)부모객체;

다형성
상속 + 오버라이딩 + 클래스 타입변환

자식클래스에 정의된 필드나 메서드를 사용하려면
강제로 자식타입으로 변환해야한다.

추상화
공통적인 본질을 모아서 추출
기존 클래스들의 공통적인 요소를 모아 상위 클래스를 만들어내는 기술

추상화 하는 방법

추상 클래스
ㄴ 추상메서드(abstract)
ㄴ 일반 필드가 들어갈 수 있다.
ㄴ 일반 메서드가 들어갈 수 있다.
ㄴ 관련있는 클래스들

인터페이스
ㄴ 상수
ㄴ 추상메서드
ㄴ static메서드
ㄴ default로 선언된 일반 메서드
ㄴ 인터페이스 끼리는 다중 상속이 가능하다.
ㄴ 상관없는 것들도 구현해도 된다.

추상클래스, 인터페이스 모두 직접 객체를 생성하는것은 불가능하다.

추상클래스 -> 추상클래스를 상속받는 자식클래스 ->
자식클래스에 객체를 만들어서 사용

인터페이스 -> 인터페이스를 구현하는 클래스
-> 구현클래스의 객체를 만들어서 사용

오류, 예외

예외
Throwable
Exception
nullPointer
numberformat
arithmetic
ArrayIndexOutOf ....

try{
  예외가 발생할 수 있는 구문
} catch(Exception e){ // Exception 자리엔 하위 처리용어들이 들어갈 수 있다.
  예외가 발생했을 때 처리
}

예외 던지기
throws 예외클래스, 예외클래스

- 메서드 내부에서 예외를 처리하지 않고, 메서드를 호출한 쪽에서
예외를 처리하는것

throw -> 예외를 강제로 발생시킨다.

사용자정의 예외
Exception 클래스를 상속받는다.


























