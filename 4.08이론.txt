메서드의 생성

1. 메서드 클래스를 상속받는다.
2. Runnable 인터페이스를 구현한다.

main도 스레드를 가지고있다

run()메서드를 직접실행하지 않는다
일반적인 메서드의 역할밖에 하지못한다.

start()메서드로 run()메서드를 실행한다.

Thread클래스의 메서드

getName() : 스레드의 이름을 가져온다.
setName() : 스레드의 이름을 정한다.
getState() : 스레드의 상태를 반환한다.
getPriority() : 우선순위를 반환
start() : run()메서드 작성된 내용 실행

스레드의 기본 우선순위는 5이다.

스레드가 여러개일때 생길 수 있는 문제점

변수는 하나인데 두개 이상의 스레드가 동시에 변수의 값을 변경하려고
하다가 오류가 발생할 수도 있다.

이처럼 특정 스레드들이 공유하는 한 개의 자원을 사용중일 때,
현재 자원을 사용중이지 않은 다른 스레드가 접근하지 못하게 하  는것을 동기화(synchronized)라고 한다.

main도 스레드이다.
스레드 -> 작업의 흐름
하나의 프로그램 안에서 여러 작업을 동시에 실행할 수 있게 해주는 기술이다.

하나의 프로그램에는 최소 1개의 스레드가 있다.

개발자가 인위적으로 스레드를 생성하는것이 가능하다.

메인이라는 큰 줄기가 있고,
1. Thread클래스를 상속받아서 생성
2. Runnable 인터페이스를 구현
내가 원하는만큼 스레드를 만들수 있다.

메인작업과 별개로 동시에 작업을 하고 싶은 내용을 run()메서드 안에다가 작성을 한다.

Runnable방식이 더 유연하고 실무에서도 많이 쓴다.

스레드를 여러개 만들고 사용할 때, 스레드가 공유하는 변수나 메서드에
접근을 하면 충돌 발생 가능성이 있다.
그래서, 하나의 스레드가 점유할 때는 다른 스레드가 사용할 수 없는 
동기화(synchronized)를 해야한다.

프로세스안에 스레드가 1개 : 싱글 스레드라 한다.
프로세스안에 스레드가 여러개 : 멀티 스레드라 한다.


























