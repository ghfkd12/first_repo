배포
- 로컬이 아닌 외부에서도 접속할 수 있도록 하는것
- 본인의 컴퓨터에 소스코드를 작성
- 가정집에서는 ip가 계속 바뀐다.
- 24시간 pc를 켜놓기엔 제한이 있다.

클라우드 컴퓨팅 서비스
- 인터넷을 통해 서버, 저장공간, 데이터베이스 등을 제공하는 서비스

클라우드 컴퓨팅 서비스의 종류
- Iaas(infrastucture as a service)
- 서버, 스토리지, 네트워크 등의 인프라를 가상으로 제공하는 서비스

비스
- 사용자는 운영체제, 미들웨어, 어플리케이션 설치를 직접 해야한다.
- 서버만 빌려주는 구조

AWS EC2
ㄴ JDK, MySQL, nginx 등을 다운받아야한다.

PaaS(platform as a service)
- 앱을 실행할 수 있는 (운영체제+런타임 환경)을 제공하는 서비스
- 사용자는 앱 코드만 작성하면 된다.
- 서버 설정, OS설치, DB연결등은 서비스가 자동으로 처리
- 개발에 집중 가능
- 일래스틱빈스톡(앱 코드만 올리면 배포, EC2는 자동으로 구성된다)

SaaS(Software as as service)
- 완성된 소프트웨어를 인터넷을 통해 제공하는 서비스
- 사용자는 설치없이 웹 또는 앱으로 바로 사용가능하다
- 서버, DB, 운영등은 모두 서비스 제공자가 관리한다.
- 구글 스프레드 시트, 이메일, 노션 ..

클라우드 컴퓨팅의 장점
- 비용절감 : 필요한 만큼만 빌려서 쓰기 때문에 물리적인 장비를 안사도 된다.
- 확장성 : 사용량에 따라 자원을 쉽게 늘리거나 줄일 수 있다.
- 접근성 : 인터넷만 있으면 언제 어디서든 데이터를 저장하고 프로그램을 사용할 수 있다.

일래스틱 빈스톡(Elastic Beanstalk)
- 코드만 업로드 하면 AWS가 인프라를 알아서 구성해주는 서비스

스프링부트 프로젝트의 빌드
빌드(build) : 소스코드 -> 실행파일(JAR or WAR)로 변환하는 작업

주요 작업 과정
- 코드 컴파일 : java파일을 특정.class파일로 변환
- 리소스 포함 : application.yml, 정적 파일 등 리소스 추가
- 라이브러리 포함 : 필요한 라이브러리(jar) 포함
- 패키징 : 최종적으로 jar또는 war파일 생성
- 실행 가능 상태 구성 : SpringBoot의 내장 톰켓 포함

스프링부트에서 사용하는 빌드도구
Gradle : 문법이 간결
Maven : xml기반

powershell켜기 -> 프로젝트 파일로 이동 -> ./gradle build

네트워크

도메인 설정
1. 도메인 구매
-1 : Route53에서 구매
-2 : 가비아에서 구매

네임서버
naver.com -> 도메인과 연결된 ip로 연결
도메인에 대한 DNS레코드들을 보관하고있는 서버

DNS레코드
도메인 이름과 관련된 정보를 저장하는 항목
A      : 도메인을 IPv4주소와 연결한다.
AAAA   : 도메인을 IPv6주소와 연결한다.
CNAME  : 도메인을 다른 도메인으로 연결한다.
NS     : 네임서버 지정
SOA    : 이 도메인의 최초 출처가 누구인지 정보가 담겨있다.

2. AWS에 호스팅 영역을 생성
ㄴ 호스팅 영역을 만들면 두개의 레코드가 생성이 되어있다.
NS, SOA
이 두개는 DNS작동의 핵심 기초가 되는 레코드들이고,
Route53이 해당 도메인의 권한을 갖고 DNS서비스를 운영하겠다는 선언이다.

NS레코드(Name Service Record)
- 이 도메인의 DNS요청을 처리할 네임서버 주소들을 지정
- 이 NS레코드는 도메인 등록기관(gavia)에도 등록해야 한다.
- 그래야 이 도메인의 DNS는 Route53이 책임진다고 인식한다.

우리의 서비스에 도메인 등록하기
1. EC2의 퍼블릭 IPv4주소를 복사한다.
2. AWS의 Route53의 호스팅 영역의 레코드생성 클릭
3. 레코드 이름 정하기(임의로 정해도 상관x)
4. 레코드 유형 A레코드로 한다.
ㄴ 백엔드 a레코드
ㄴ 프론트엔드 a레코드
CORS처리까지 해주면 도메인으로 접속할 수 있다.
