인터페이스
인터 페이스는 상수와 추상메서드만 들어갈 수 있다.

상수 : 한번 대입되면 바뀌지 않는 값
추상메서드 : 구현체({}부분)가 없는 메서드
default메서드 : default접근제한자를 가진 완전한 메서드

익명클래스 : 이름이없는 클래스
- 일회성으로 사용되는 클래스를 간단하게 정의할 수 있다.
- 인터페이스나 추상클래스의 구현을 간단하게 처리할 수 있다.

함수형 인터페이스
익명클래스보다 람다식이 더 간단하기 때문에 함수형 인터페이스를 사용할 때는
람다식이 더 권장된다.


직접 인터페이스를 만들일은 적고, 자바에서 제공하는 인터페이스를 사용할 일이 더 많다.
Collection : 자바에서 제공하는 인터페이스


  List                      Set                             Map      : 인터페이스
->ArrayList               ->HashSet                       ->HashMap  : 인터페이스의 구현클래스
  LinkedList                TreeSet
  Vector

ArrayList
1. 인덱스를 가지고있다.
2. 배열을 기반으로 동작한다.
3. 배열과 다른점은 데이터를 넣는대로 들어간다.
4. 조회에 유리하다.(index에 바로 접근하기때문)
5. 추가/삭제에는 불리하다.(상대적)   

LinkedList
1. 노드를 기반으로 동작한다.
2. 노드 : 데이터와 다음 노드의 주소를 가지고 있는 객체
3. 인덱스가 없다
4. 조회에 불리하다.
5. 추가/삭제에 유리하다.

HashSet
1. 인덱스가 없다
2. 정렬이 되지 않는다
3. 중복이 없다.

HashMap
1. Key-value쌍으로 이루어져있다.
2. 인덱스가 없다
3. 대량의 데이터를 저장할 때 좋다.

컬렉션은 중첩해서 사용할 수 있다.

HashMap<String, List<String>> map

list,set
add() : 데이터의 추가
set() : 데이터의 수정
remove() : 데이터의 삭제
clear() : 컬렉션 내부의 데이터 전체 삭제
isEmpty() : 비어있는지 판별
get() : value값 가져오기

HashMap
put()
get()
getOrDefalut()
putIfAbsent()
remove()
isEmpty()


































